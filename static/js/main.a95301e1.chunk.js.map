{"version":3,"sources":["pages/Home.js","pages/About.js","pages/Projects.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","react_default","a","createElement","className","id","href","target","About","src","alt","Projects","Contact","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changePage","e","document","getElementById","setAttribute","pageJsx","page","getAttribute","pages_Home","pages_About","pages_Projects","pages_Contact","setState","currentPage","state","App_Navbar","change","Component","Navbar","onClick","value","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a95301e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div className = 'Home'>\r\n      <div id='header'>\r\n        <div id='blurb'>\r\n          <p id=\"name\">Ben Thorn</p>\r\n          <p>Web developer, front end and full stack. Software engineer.</p>\r\n          <p>Welcome!</p>\r\n          <a href=\"https://github.com/BenThorn\" target=\"_blank\"><button>Github</button></a>\r\n          <a href=\"https://www.linkedin.com/in/benjamin-thorn-a70216ba/\" target=\"_blank\"><button>LinkedIn</button></a>\r\n        </div>\r\n      </div>\r\n      <div id=\"intro\">\r\n        <p>Hello, I'm Ben Thorn. </p>\r\n        <p>I'm a student at the Rochester Institute of Technology, and looking to make my way into the worlds of web development and software engineering.</p>\r\n        <p>On this site you can find samples of my work as well as details on my specialties. Take a look around, and if you have any questions, you can also find my contact information. Thank you!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};  \r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div className = \"About\">\r\n      <h3>About Me</h3>\r\n      <img src='/portfolio-site/assets/picofme.png' alt=\"me\"/>\r\n      <p>My name is Ben Thorn. I’m currently an upperclassman at the Rochester Institute of Technology, but I’m originally from the Philadelphia area, from a town near Valley Forge called Chesterbrook. </p>\r\n      <p>Currently, I am due to graduate from college in the December of 2019, and as my college career comes to an end, I’m on the search for oppurtunities to kick off my career.</p>\r\n      <p>My goal for my career is to work as a full stack web developer, or a front end interactive developer, and I think the skills I’ve gained while at RIT have given me the ability to do both. </p>\r\n      <h3>Education</h3>\r\n      <img src='/portfolio-site/assets/rit.png' alt='rit' />\r\n      <ul id=\"degrees\">\r\n        <li>New Media Interactive Development, <i>Major</i></li>\r\n        <li>Database Design, Development, and Implementation, <i>Minor</i></li>\r\n        <li>Modern Japanese Language, <i>Minor</i></li>\r\n      </ul>\r\n      <p>At RIT, my major is New Media Interactive Development. My major focuses mainly on front end development, in addition to some integration of back end elements in web development. I've also picked up some skills in game development during my time at RIT.</p>\r\n      <p>Since my goal is to be a full stack developer, I’ve also decided to get some back end knowledge with a minor in Database Development, Design, and Implementation.</p>\r\n      <p>In addition, as a sort of personal endeavor, I also have a minor in Modern Japanese Language. While it started as just a few classes taken to fill some credits, I’ve found myself taking to it very well and enjoying it, so I decided to take it further. I find the change of pace from my computing classes to be refreshing.</p>\r\n      <h3>Skills</h3>\r\n      <div id=\"logos\">\r\n        <img src='/portfolio-site/assets/js.png' alt='js' />\r\n        <img src='/portfolio-site/assets/angular.png' alt='js' />     \r\n        <img src='/portfolio-site/assets/react.png' alt='js' />     \r\n        <img src='/portfolio-site/assets/csharp.png' alt='js' />\r\n        <img src='/portfolio-site/assets/sql.png' alt='js' />\r\n      </div>\r\n      <p>Here’s a list of some languages and frameworks that I have some experience with.</p>\r\n      <ul id=\"skills\">\r\n        <li>Javascript (Typescript, ES7)</li>\r\n        <li>Node.js</li>\r\n        <li>React</li>\r\n        <li>Angular</li>\r\n        <li>Jasmine</li>\r\n        <li>D3</li>\r\n        <li>HTML5 & CSS3</li>\r\n        <li>SCSS, Gulp, Babel</li>\r\n        <li>SQL & MySQL</li>\r\n        <li>MongoDB</li>\r\n        <li>C# & .NET</li>\r\n        <li>Unity</li>\r\n        <li>Java</li>\r\n        <li>git</li>\r\n      </ul>\r\n      <p>Of these, I would consider Javascript to be my language of choice, as I have a great amount of experience with its more modern libraries like Node and React for use in front end and server development. </p>\r\n      <p>I’ve used C# to both develop games using Unity, as well as develop back end applications for interacting with SQL databases using the .NET framework. I’ve also used Java in the past to accomplish the same thing.</p>\r\n      <h3>Experience</h3>\r\n      <section id=\"job\">\r\n        <div>clevermethod - <i>Web Developer Co-op, Summer 2019</i></div>\r\n      </section>\r\n      <p>In the Summer of 2019, I worked in Buffalo at a marketing agency called clevermethod. The company itself was rather smaller, with around 30 employees total, the dev team being around 6-7 people.</p>\r\n      <p>I worked on several different projects for various clients, with varying levels of complexity. Some were the implementation of a particular app on their site, other times I would need to build the site from the ground up, implementing designs from either our internal designers, or the client's own. I also worked on the company's internal product, a CMS system for their clients to use.</p>\r\n      <section id=\"job\">\r\n        <div>Forbes - <i>Front End Developer Intern, Spring 2018</i></div>\r\n      </section>\r\n      <p>For my first internship, I worked at Forbes magazine, as part of their web development team. I worked with a remote team of four in Rochester, with two full time employees and two interns, in addition to the rest of the dev team back at their headquarters in New Jersey over Slack.</p>\r\n      <p>At Forbes, our project was a new CMS that they were rolling out, Bertie. I learned to use technologies like Angular, RxJS, and Jasmine to make new front end features, and build things like unit tests to roll out to production. I also helped out with code review for my team.</p>\r\n      <section id=\"job\">\r\n        <div>RIT - <i>Teaching Assistant, Fall 2017</i></div>\r\n      </section>\r\n      <p>I worked as a teaching assistant for an introductory programming course, offered to me by a former professor. My work included grading and answering students’ questions in class, walking them through essential programming concepts.</p>\r\n    </div>\r\n  );\r\n};  \r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Projects = (props) => {\r\n  return (\r\n    <div className=\"Projects\">\r\n      <h3>Dröm</h3>\r\n      <p>An interactive rhythm game experience that was featured as a display at the Imagine RIT 2019 festival, made for my senior capstone project in a team of 7 (5 designers, 2 developers). The game is played by three players, each with their own drum (which is actually a 50 gallon barrel with leather stretched over it) that is connected to the game via an Arduino.</p>\r\n      <p>I was responsible for the programming of the gameplay and the implementation of the assets given to me by the designers, as well as the input method, which used Arduinos hooked up to contact microphones strategically placed at the center of each drum. The other developer handled any external and supplementary applications, such as the scoreboard used in the demonstration and promotional sites.</p>\r\n      <p>The whole project, from concept to the demonstration, took about 4 months. The final product was available to play at Imagine RIT, my school's festival where students and faculty can show off their work to the public. Roughly 500 people tried it out at the show. In addition, Dröm was also the recipient of the Adobe Design Achievement Awards. While the game is not available to play online, you can read about it on our team's behance page below, and about the general concept and team <a href=\"https://designed.cad.rit.edu/nmcapstone/project/drom?preview_id=44&preview=true\">here</a>.</p>\r\n      <section id=\"buttons\">\r\n        <a href=\"https://github.com/BenThorn/drom-final\" target=\"_blank\"><button>Github</button></a>\r\n        <a href=\"https://www.behance.net/gallery/81596181/Droem-A-Collaborative-Rhythm-Experience\" target=\"_blank\"><button>View site</button></a>\r\n      </section>\r\n      <h3>VG Timer</h3>\r\n      <p>A web service app built using Node and React, in addition to other services like Express and MongoDB. Supports a login service for saving user data. Functions similarly to a task-tracking app like Trello, except the purpose is for users to keep track of games that they are currently playing, as well as playtime and other data.</p>\r\n      <section id=\"buttons\">\r\n        <a href=\"https://github.com/BenThorn/VGTimer\" target=\"_blank\"><button>Github</button></a>\r\n        <a href=\"https://vgtimer.herokuapp.com/\" target=\"_blank\"><button>View site</button></a>\r\n      </section>\r\n      <h3>Kanji Cards</h3>\r\n      <p>A web app that uses a custom built API to create and store decks and cards of Japanese vocabulary. I built the API for saving decks using Node and HTTP, but I use an external API for getting the dictionary data.</p>\r\n      <section id=\"buttons\">\r\n        <a href=\"https://github.com/BenThorn/kanji-cards\" target=\"_blank\"><button>Github</button></a>\r\n        <a href=\"http://kanji-cards.herokuapp.com/\" target=\"_blank\"><button>View site</button></a>\r\n      </section>\r\n      <h3>Game Shelf</h3>\r\n      <p>A web app that calls on a database of video games and allows users to save games to their collection, using local storage. Built using Node.</p>\r\n      <section id=\"buttons\">\r\n        <a href=\"https://github.com/BenThorn/game-shelf\" target=\"_blank\"><button>Github</button></a>\r\n        <a href=\"https://frozen-inlet-23444.herokuapp.com/\" target=\"_blank\"><button>View site</button></a>\r\n      </section>\r\n      <h3>This Site</h3>\r\n      <p>This site I believe would also count as a project of mine. I built is using React rendered to a static site, so I didn't have to run a server to host the site and could simply use Github Pages.</p>\r\n      <section id=\"buttons\">\r\n        <a href=\"https://github.com/BenThorn/portfolioproto\" target=\"_blank\"><button>Github</button></a>\r\n      </section>\r\n    </div>\r\n  );\r\n};  \r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nconst Contact = (props) => {\r\n  return (\r\n    <div className=\"Contact\">\r\n      <h3>Contact Me</h3>\r\n      <p>If you have any questions or would otherwise like to talk, feel free to contact me. The best way to get to me would be through my school email, listed below.</p>\r\n      <p>Cell phone - (610) 312-4643</p>\r\n      <p>Email - brt4557@rit.edu</p>\r\n    </div>\r\n  );\r\n};  \r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from'./pages/Home.js';\r\nimport About from'./pages/About.js';\r\nimport Projects from'./pages/Projects.js';\r\nimport Contact from'./pages/Contact.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {currentPage: <Home /> };\r\n  }\r\n\r\n  changePage = (e) => {\r\n    document.getElementById('selected').setAttribute('id', 'unselected');\r\n    const page = e.target.getAttribute('value');\r\n    e.target.setAttribute('id', 'selected');\r\n    let pageJsx;\r\n    switch(page){\r\n      case 'home':\r\n        pageJsx = <Home />\r\n        break;\r\n      case 'about':\r\n        pageJsx = <About />\r\n        break;\r\n      case 'projects':\r\n        pageJsx = <Projects />\r\n        break;\r\n      case 'contact':\r\n        pageJsx = <Contact />\r\n        break;\r\n      default:\r\n        pageJsx = <Home />\r\n    }\r\n    this.setState({currentPage: pageJsx});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar change={this.changePage}/>\r\n        <div id=\"content\">\r\n          {this.state.currentPage}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className=\"Navbar\">\r\n      <ul>\r\n        <li onClick={props.change} value=\"home\" id=\"selected\">Home</li>\r\n        <li onClick={props.change} value=\"about\" id=\"unselected\">About</li>\r\n        <li onClick={props.change} value=\"projects\" id=\"unselected\">Projects</li>\r\n        <li onClick={props.change} value=\"contact\" id=\"unselected\">Contact</li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};  \r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}